defmodule MakeupRustTest do
  use ExUnit.Case

  import Makeup.Lexers.RustLexer.Testing

  test "highlight use statements" do
    assert lex("use crate::{Type, subcrate};") ==
             [
               {:keyword, %{}, "use"},
               {:whitespace, %{}, " "},
               {:keyword, %{}, "crate"},
               {:operator, %{}, ":"},
               {:operator, %{}, ":"},
               {:punctuation, %{group_id: "group-1"}, "{"},
               {:name_constant, %{}, "Type"},
               {:punctuation, %{}, ","},
               {:whitespace, %{}, " "},
               {:name, %{}, "subcrate"},
               {:punctuation, %{group_id: "group-1"}, "}"},
               {:punctuation, %{}, ";"}
             ]
  end

  test "highlight a complete example" do
    assert lex("""
           #[rustler::nif]
           fn eval<'a>(
           env: Env<'a>,
           expression: &str,
           expression_scope: HashMap<String, Term<'a>>,
           ) -> Result<Term<'a>, Term<'a>> {
           // Create an 'Engine'
           let mut engine = Engine::new();
           engine.set_fail_on_invalid_map_property(true);
           let engine = engine;

           let mut scope = Scope::new();

           // Add variables to the scope
           for (k, v) in &expression_scope {
             scope.push_dynamic(k, types::to_dynamic(env, v));
           }

           match engine.eval_with_scope::<Dynamic>(&mut scope, expression) {
             Ok(result) => Ok(types::from_dynamic(env, result)),

             Err(e) => Err(errors::to_error(env, *e)),
           }
           }

           rustler::init!("Elixir.Rhai.Native", [eval]);
           """) == [
             {:error, %{}, "#"},
             {:punctuation, %{group_id: "group-1"}, "["},
             {:name, %{}, "rustler"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name, %{}, "nif"},
             {:punctuation, %{group_id: "group-1"}, "]"},
             {:whitespace, %{}, "\n"},
             {:keyword, %{}, "fn"},
             {:whitespace, %{}, " "},
             {:name, %{}, "eval"},
             {:operator, %{}, "<"},
             {:error, %{}, "'"},
             {:name, %{}, "a"},
             {:operator, %{}, ">"},
             {:punctuation, %{group_id: "group-2"}, "("},
             {:whitespace, %{}, "\n"},
             {:name, %{}, "env"},
             {:operator, %{}, ":"},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Env"},
             {:operator, %{}, "<"},
             {:error, %{}, "'"},
             {:name, %{}, "a"},
             {:operator, %{}, ">"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, "\n"},
             {:name, %{}, "expression"},
             {:operator, %{}, ":"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "&"},
             {:name, %{}, "str"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, "\n"},
             {:name, %{}, "expression_scope"},
             {:operator, %{}, ":"},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "HashMap"},
             {:operator, %{}, "<"},
             {:name_constant, %{}, "String"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Term"},
             {:operator, %{}, "<"},
             {:error, %{}, "'"},
             {:name, %{}, "a"},
             {:operator, %{}, ">>"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, "\n"},
             {:punctuation, %{group_id: "group-2"}, ")"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "->"},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Result"},
             {:operator, %{}, "<"},
             {:name_constant, %{}, "Term"},
             {:operator, %{}, "<"},
             {:error, %{}, "'"},
             {:name, %{}, "a"},
             {:operator, %{}, ">"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Term"},
             {:operator, %{}, "<"},
             {:error, %{}, "'"},
             {:name, %{}, "a"},
             {:operator, %{}, ">>"},
             {:whitespace, %{}, " "},
             {:punctuation, %{group_id: "group-3"}, "{"},
             {:whitespace, %{}, "\n"},
             {:comment_single, %{}, "// Create an 'Engine'"},
             {:whitespace, %{}, "\n"},
             {:keyword, %{}, "let"},
             {:whitespace, %{}, " "},
             {:keyword, %{}, "mut"},
             {:whitespace, %{}, " "},
             {:name, %{}, "engine"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "="},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Engine"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name_function, %{}, "new"},
             {:punctuation, %{group_id: "group-4"}, "("},
             {:punctuation, %{group_id: "group-4"}, ")"},
             {:punctuation, %{}, ";"},
             {:whitespace, %{}, "\n"},
             {:name, %{}, "engine"},
             {:punctuation, %{}, "."},
             {:name_function, %{}, "set_fail_on_invalid_map_property"},
             {:punctuation, %{group_id: "group-5"}, "("},
             {:keyword_constant, %{}, "true"},
             {:punctuation, %{group_id: "group-5"}, ")"},
             {:punctuation, %{}, ";"},
             {:whitespace, %{}, "\n"},
             {:keyword, %{}, "let"},
             {:whitespace, %{}, " "},
             {:name, %{}, "engine"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "="},
             {:whitespace, %{}, " "},
             {:name, %{}, "engine"},
             {:punctuation, %{}, ";"},
             {:whitespace, %{}, "\n\n"},
             {:keyword, %{}, "let"},
             {:whitespace, %{}, " "},
             {:keyword, %{}, "mut"},
             {:whitespace, %{}, " "},
             {:name, %{}, "scope"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "="},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Scope"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name_function, %{}, "new"},
             {:punctuation, %{group_id: "group-6"}, "("},
             {:punctuation, %{group_id: "group-6"}, ")"},
             {:punctuation, %{}, ";"},
             {:whitespace, %{}, "\n\n"},
             {:comment_single, %{}, "// Add variables to the scope"},
             {:whitespace, %{}, "\n"},
             {:keyword, %{}, "for"},
             {:whitespace, %{}, " "},
             {:punctuation, %{group_id: "group-7"}, "("},
             {:name, %{}, "k"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name, %{}, "v"},
             {:punctuation, %{group_id: "group-7"}, ")"},
             {:whitespace, %{}, " "},
             {:keyword, %{}, "in"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "&"},
             {:name, %{}, "expression_scope"},
             {:whitespace, %{}, " "},
             {:punctuation, %{group_id: "group-8"}, "{"},
             {:whitespace, %{}, "\n  "},
             {:name, %{}, "scope"},
             {:punctuation, %{}, "."},
             {:name_function, %{}, "push_dynamic"},
             {:punctuation, %{group_id: "group-9"}, "("},
             {:name, %{}, "k"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name, %{}, "types"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name_function, %{}, "to_dynamic"},
             {:punctuation, %{group_id: "group-10"}, "("},
             {:name, %{}, "env"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name, %{}, "v"},
             {:punctuation, %{group_id: "group-10"}, ")"},
             {:punctuation, %{group_id: "group-9"}, ")"},
             {:punctuation, %{}, ";"},
             {:whitespace, %{}, "\n"},
             {:punctuation, %{group_id: "group-8"}, "}"},
             {:whitespace, %{}, "\n\n"},
             {:keyword, %{}, "match"},
             {:whitespace, %{}, " "},
             {:name, %{}, "engine"},
             {:punctuation, %{}, "."},
             {:name, %{}, "eval_with_scope"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:operator, %{}, "<"},
             {:name_constant, %{}, "Dynamic"},
             {:operator, %{}, ">"},
             {:punctuation, %{group_id: "group-11"}, "("},
             {:operator, %{}, "&"},
             {:keyword, %{}, "mut"},
             {:whitespace, %{}, " "},
             {:name, %{}, "scope"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name, %{}, "expression"},
             {:punctuation, %{group_id: "group-11"}, ")"},
             {:whitespace, %{}, " "},
             {:punctuation, %{group_id: "group-12"}, "{"},
             {:whitespace, %{}, "\n  "},
             {:name_constant, %{}, "Ok"},
             {:punctuation, %{group_id: "group-13"}, "("},
             {:name, %{}, "result"},
             {:punctuation, %{group_id: "group-13"}, ")"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "="},
             {:operator, %{}, ">"},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Ok"},
             {:punctuation, %{group_id: "group-14"}, "("},
             {:name, %{}, "types"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name_function, %{}, "from_dynamic"},
             {:punctuation, %{group_id: "group-15"}, "("},
             {:name, %{}, "env"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:name, %{}, "result"},
             {:punctuation, %{group_id: "group-15"}, ")"},
             {:punctuation, %{group_id: "group-14"}, ")"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, "\n\n  "},
             {:name_constant, %{}, "Err"},
             {:punctuation, %{group_id: "group-16"}, "("},
             {:name, %{}, "e"},
             {:punctuation, %{group_id: "group-16"}, ")"},
             {:whitespace, %{}, " "},
             {:operator, %{}, "="},
             {:operator, %{}, ">"},
             {:whitespace, %{}, " "},
             {:name_constant, %{}, "Err"},
             {:punctuation, %{group_id: "group-17"}, "("},
             {:name, %{}, "errors"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name_function, %{}, "to_error"},
             {:punctuation, %{group_id: "group-18"}, "("},
             {:name, %{}, "env"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:operator, %{}, "*"},
             {:name, %{}, "e"},
             {:punctuation, %{group_id: "group-18"}, ")"},
             {:punctuation, %{group_id: "group-17"}, ")"},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, "\n"},
             {:punctuation, %{group_id: "group-12"}, "}"},
             {:whitespace, %{}, "\n"},
             {:punctuation, %{group_id: "group-3"}, "}"},
             {:whitespace, %{}, "\n\n"},
             {:name, %{}, "rustler"},
             {:operator, %{}, ":"},
             {:operator, %{}, ":"},
             {:name_function, %{}, "init!"},
             {:punctuation, %{group_id: "group-19"}, "("},
             {:string, %{}, "\"Elixir.Rhai.Native\""},
             {:punctuation, %{}, ","},
             {:whitespace, %{}, " "},
             {:punctuation, %{group_id: "group-20"}, "["},
             {:name, %{}, "eval"},
             {:punctuation, %{group_id: "group-20"}, "]"},
             {:punctuation, %{group_id: "group-19"}, ")"},
             {:punctuation, %{}, ";"},
             {:whitespace, %{}, "\n"}
           ]
  end
end
